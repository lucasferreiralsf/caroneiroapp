version: '3'
services:
  caroneiro_api:
    container_name: caroneiro_api
    build: 
      context: ./caroneiro-api
      dockerfile: Dockerfile-production
    volumes:
      - './caroneiro-api:/caroneiro/api'
      - /caroneiro/api/node_modules
    # depends_on:
    #  - mongo
    ports:
      - '7000:3000'
    labels:
      - "traefik.backend=api-caroneiroapp"
      - "traefik.backend.rule=Host:api.cluster.caroneiroapp.com.br"
      - "traefik.port=7000"
    networks:
      - web
      - docker-caroneiro

networks:
  web:
    external: true
  docker-caroneiro:
    external: false












version: '3'

services:
  drone:
    image: drone/drone
    container_name: drone
    restart: always
    ports:
      - 9000:9000
    environment:
      - DRONE_AGENTS_ENABLED=true
      - DRONE_GITHUB_SERVER=https://github.com
      - DRONE_GITHUB_CLIENT_ID=0d0c893964d5cbf5ce90
      - DRONE_GITHUB_CLIENT_SECRET=721fca1a9c2f4dca2ce2c811412d855e38c10e2d
      - DRONE_RPC_SECRET=79dea521ddb251eb9700d849fa5fbf94
      - DRONE_SERVER_HOST=drone.caroneiroapp.com.br
      - DRONE_SERVER_PROTO=https
      - DRONE_LOGS_DEBUG=true
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_PRETTY=true
      - DRONE_USER_CREATE=username:lucasferreiralsf,admin:true
    labels:
      - "traefik.backend=drone-backend"
      - "traefik.frontend.protocol=https"
      - "traefik.frontend.rule=Host:drone.caroneiroapp.com.br"
    depends_on:
      - reverse_proxy
    volumes:
      - /var/lib/drone:/data
    networks:
      - web
      - docker-caroneiro

  # drone_agent:
  #   image: drone/agent
  #   container_name: drone_agent
  #   restart: always
  #   environment:
  #     - DRONE_RPC_PROTO=https
  #     - DRONE_RPC_HOST=drone.caroneiroapp.com.br
  #     - DRONE_LOGS_TRACE=true
  #     - DRONE_RPC_SECRET=79dea521ddb251eb9700d849fa5fbf94
  #     - DRONE_RUNNER_CAPACITY=2
  #     - DRONE_RUNNER_NAME=caroneiroapp.com.br
  #   labels:
  #     - traefik.enable=true
  #     - "traefik.backend=droneci-runner"
  #     - "traefik.frontend.protocol=https"
  #   depends_on:      
  #     - drone
  #   volumes:      
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - web
  #     - docker-caroneiro

  drone_agent:
    image: drone/drone-runner-ssh
    container_name: drone_agent
    restart: always
    environment:
      - DRONE_RPC_PROTO=https
      - DRONE_RPC_HOST=drone.caroneiroapp.com.br
      - DRONE_LOGS_TRACE=true
      - DRONE_RPC_SECRET=79dea521ddb251eb9700d849fa5fbf94
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=caroneiroapp.com.br
    labels:
      - traefik.enable=true
      - "traefik.backend=droneci-runner"
      - "traefik.frontend.protocol=https"
    depends_on:      
      - drone
    volumes:      
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
      - docker-caroneiro

  mongo:
    container_name: mongo
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - './data/mongodb/db:/data/db'
    depends_on:
      - reverse_proxy
    labels:
      - traefik.enable=true
    networks:
      - web
      - docker-caroneiro

  reverse_proxy:
    image: traefik
    # command: --api --docker
    restart: always
    container_name: reverse_proxy
    ports:
      - "80:80"
      # - "8080:8080"
      - "443:443"
    networks:
      - web
    labels:
      - "traefik.frontend.protocol=https"
      - "traefik.port=8080"
      - traefik.enable=true
      - "traefik.frontend.rule=Host:cluster.caroneiroapp.com.br"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json

networks:
  web:
    external: true
  docker-caroneiro:
    external: false
volumes:  mongodb_data:
    driver: local